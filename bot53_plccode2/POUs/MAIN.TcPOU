<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{9ffd701e-dddc-4f11-aab6-63eac6218bb2}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN


VAR
	FB_SET_ENCODER_ODEOMETRY:set_encoder_odeometry();
	FB_DRIVE_MOTORS:DriveMotors();
	gyroZSum:LREAL:=0;
	accXSum:LREAL:=0;
	FB_CONTROLLER:motion_controller;
	dontcontinue:BOOL:=FALSE;
	currtime:ULINT;
	datediff:ULINT;
	fb_kalmaninit:kalmanInit;
	fb_kalmanStep:kalmanStep;
	fb_kalmanController:kalmanController;

END_VAR

	
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//LATE/ERROR KONTROLÜ
IF(calibrationCount<500) THEN
      gyroZSum:=gyroZSum+robotdata.imu_state.hr_gyro_z;
      accXSum:=accXSum+robotdata.imu_state.hr_acc_x;
      calibrationCount:=calibrationCount+1;
ELSIF (calibrationCount=500)THEN
      gyroZmean:=gyroZSum/500;
      accXmean:=accXSum/500;
      calibrationCount:=calibrationCount+1;
    END_IF
	
IF CONTROLLER_TYPE=1 AND NOT KALMAN_INITIALIZED AND pf_valid=1 THEN
	fb_kalmaninit();
	KALMAN_INITIALIZED:=TRUE;
END_IF
robotdata.batteryVoltage:=DINT_TO_REAL(batteryVoltageINT)/1000;
currtime:=F_GetSystemTime() ;
datediff:=(currtime/10000)-ads_lasttime;
IF (currtime-lastqrtime > NO_QR_TIMEOUT OR (pf_valid=1 AND robotdata.qr_x=0 AND  robotdata.qr_angle=0 AND raw_qr_tag=0 AND robotdata.qr_y=0)) AND robotdata.motion_status=MOTION_ENDED THEN
	robotdata.motion_status:=QRCAM_ERROR;
	robotdata.activestate:=QRCAM_ERROR;
ELSIF currtime-lastqrtime < NO_QR_TIMEOUT  AND robotdata.motion_status=QRCAM_ERROR THEN
	robotdata.motion_status:=MOTION_ENDED;
	robotdata.activestate:=MOTION_ENDED;
END_IF

IF currtime-lastqrtagtime > NO_QR_TIMEOUT AND robotdata.motion_status=MOTION_ENDED THEN
	robotdata.activestate:=LOST;
ELSIF currtime-lastqrtagtime < NO_QR_TIMEOUT AND robotdata.activestate=LOST THEN
	robotdata.activestate:=MOTION_ENDED;
END_IF
IF (currtime/10000)-ads_lasttime > NO_ADS_TIMEOUT AND (robotdata.motion_status>PLC_ERROR OR robotdata.motion_status=MOTION_ENDED) THEN
	robotdata.motion_status:=PLC_ERROR;
	robotdata.activestate:=PLC_ERROR;
ELSIF (currtime/10000)-ads_lasttime < NO_ADS_TIMEOUT AND (robotdata.motion_status=PLC_ERROR) THEN
robotdata.motion_status:=MOTION_ENDED;
robotdata.activestate:=MOTION_ENDED;
END_IF
IF(robotdata.motorError[0]+robotdata.motorError[1]+robotdata.motorError[2]+robotdata.motorError[3]>0) AND robotdata.motion_status=MOTION_ENDED  THEN
	robotdata.motion_status:=MOTOR_ERROR;
ELSIF(robotdata.motorError[0]+robotdata.motorError[1]+robotdata.motorError[2]+robotdata.motorError[3]=0 AND robotdata.motion_status=MOTOR_ERROR)THEN
robotdata.motion_status:=MOTION_ENDED;
END_IF
FB_SET_ENCODER_ODEOMETRY();


robotdata.encoderx_rel:=robotdata.encoder_x-LREAL_TO_DINT(robotdata.encoder_x);
robotdata.encodery_rel:=robotdata.encoder_y-LREAL_TO_DINT(robotdata.encoder_y);
robotdata.imux_rel:=robotdata.imu_state.imu_x-LREAL_TO_DINT(robotdata.imu_state.imu_x);
robotdata.imuy_rel:=robotdata.imu_state.imu_y-LREAL_TO_DINT(robotdata.imu_state.imu_y);

IF(CONTROLLER_TYPE=0)THEN
	IF(pf_valid=0)THEN
		robotdata.robot_x:=robotdata.encoder_x;
		robotdata.robot_y:=robotdata.encoder_y;
		robotdata.robot_yaw:=robotdata.imu_state.imu_euler;
		winnerEvaluated:=FALSE;
	END_IF
	FB_CONTROLLER();
	FB_DRIVE_MOTORS();
ELSIF(CONTROLLER_TYPE=1 AND KALMAN_INITIALIZED) THEN
	fb_kalmanStep();
	robotdata.robot_x:=PosFdbckX;
	robotdata.robot_y:=PosFdbckY;
	robotdata.robot_yaw:=robotAngle *PI/180;
	fb_kalmanController();
END_IF

]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="761" Count="0" />
      <LineId Id="945" Count="3" />
      <LineId Id="951" Count="3" />
      <LineId Id="944" Count="0" />
      <LineId Id="955" Count="0" />
      <LineId Id="864" Count="0" />
      <LineId Id="880" Count="0" />
      <LineId Id="883" Count="0" />
      <LineId Id="881" Count="0" />
      <LineId Id="762" Count="2" />
      <LineId Id="846" Count="0" />
      <LineId Id="766" Count="5" />
      <LineId Id="830" Count="0" />
      <LineId Id="824" Count="0" />
      <LineId Id="826" Count="1" />
      <LineId Id="829" Count="0" />
      <LineId Id="823" Count="0" />
      <LineId Id="772" Count="18" />
      <LineId Id="798" Count="0" />
      <LineId Id="905" Count="0" />
      <LineId Id="917" Count="4" />
      <LineId Id="916" Count="0" />
      <LineId Id="799" Count="1" />
      <LineId Id="901" Count="0" />
      <LineId Id="925" Count="0" />
      <LineId Id="922" Count="2" />
      <LineId Id="902" Count="1" />
      <LineId Id="818" Count="0" />
      <LineId Id="580" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>